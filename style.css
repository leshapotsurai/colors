* {
  margin: 0; /*внешние отступы*/
  padding: 0; /*внутренние отступы*/
  box-sizing: border-box; /*элемент сохраняет заданные размеры, отступы и рамки отрисовываются внутрь элемента.*/
}

body {
  font-family: 'Gantari', sans-serif;
  height: 100vh; /*занимает всю высоту*/
  display: flex; /* все дивы выстраиваются в один ряд*/
}

.col {
  flex: 1; /*для того, чтобы колонки распространились по всей ширине страницы и занимали одинаковое пространство*/
  display: flex;
  flex-direction: column; /*column.Главная ось располагается вертикально и направлена сверху вниз*/
  justify-content: space-around; /*Элементы равномерно распределены вдоль главной оси контейнера. Расстояния 
  между каждой парой соседних элементов равны. Пустые пространства перед первым
   элементом и после последнего элемента равны половине расстояния между парами соседних элементов.*/
  align-items: center; /*Свойство align-items выравнивает флекс-элементы внутри контейнера в перпендикулярном направлении.*/
}

.col h2 {
  padding: 10px;
  color: #fff;
  border-radius: 10px;
  transition: background 0.4s; /*cвойства анимации*/
}

.col h2:hover {
  background: rgba(
    0,
    0,
    0,
    0.1
  ); /*CSS псевдокласс :hover срабатывает, когда пользователь наводит на элемент мышью,
 но не обязательно активирует его*/
  cursor: pointer;
}

.col button {
  outline: none;
  border: none; /*убираем границы*/
  background: transparent; /*делаем окружение замочка прозрачным*/
  font-size: 1.5rem; /*увеличиваем размер замочка. Единица rem задаёт размер относительно
   размера шрифта элемента <html>. Элементы, размер которых задан в rem, не зависят друг от друга и 
   от контекста – и этим похожи на px, а с другой стороны они все заданы относительно размера шрифта <html>*/
  color: #fff;
  padding: 10px;
  border-radius: 10px;
  transition: background 0.4s;
}

.col button:hover {
  background: rgba(0, 0, 0, 0.1);
  cursor: pointer;
}
